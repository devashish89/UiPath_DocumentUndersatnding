<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1423,3763" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiaam="clr-namespace:UiPath.IntelligentOCR.Activities.Actions.Model;assembly=UiPath.IntelligentOCR.Activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="554,3598" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p7:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="digitizedText" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="RawExtractedResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="HumanValidatedResults" />
      <Variable x:TypeArguments="sd1:DataSet" Name="extractedDataset" />
      <Variable x:TypeArguments="x:String" Name="docPath" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="classification_result" />
      <Variable x:TypeArguments="uiaam:DocumentValidationActionData" Name="Action_1" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="512,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
    <Assign sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[docPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Scanned Invoice.pdf"]</InArgument>
      </Assign.Value>
    </Assign>
    <p:DigitizeDocument DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="512,293" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
      <p:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" />
        </ActivityFunc>
      </p:DigitizeDocument.OCREngine>
    </p:DigitizeDocument>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="digitizedText.txt" sap:VirtualizedContainerService.HintSize="512,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[digitizedText]" />
    <p1:ClassifyDocumentScope ClassificationResults="[classification_result]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" sap:VirtualizedContainerService.HintSize="512,434" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI0ef2528081f64bb1912d69cbbd0f3281&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Services&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Services&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI0ef2528081f64bb1912d69cbbd0f3281&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{}}">
      <p1:ClassifyDocumentScope.Classifiers>
        <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,113" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="keyword.json" PersistenceId="UI0ef2528081f64bb1912d69cbbd0f3281">
          <p1:KeywordBasedClassifier.ClassifierResult>
            <OutArgument x:TypeArguments="p2:ClassifierResult">
              <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p1:KeywordBasedClassifier.ClassifierResult>
          <p1:KeywordBasedClassifier.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentObjectModel>
          <p1:KeywordBasedClassifier.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentPath>
          <p1:KeywordBasedClassifier.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentText>
          <p1:KeywordBasedClassifier.DocumentTypes>
            <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
              <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentTypes>
        </p1:KeywordBasedClassifier>
      </p1:ClassifyDocumentScope.Classifiers>
    </p1:ClassifyDocumentScope>
    <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[classification_result(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" ExtractionResult="[RawExtractedResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="512,482" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc7233b9445d347a8a2cff6150579344d&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Services&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Services.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Services.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Services.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIc7233b9445d347a8a2cff6150579344d&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIc7233b9445d347a8a2cff6150579344d&quot;:[]}}">
      <p4:DataExtractionScope.Extractors>
        <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="jyiS8cDbMEb1twA0/FGUPF8HSYWTM0VhxIwzOUhjgyhGyPTXKMApDzLxmI6ygzyB" DisplayName="Form Extractor" Endpoint="https://formextractor.uipath.com/?edition=enterprise" sap:VirtualizedContainerService.HintSize="234,161" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UIc7233b9445d347a8a2cff6150579344d" SerializedSettings="{}{&quot;DocTypeSettings&quot;:[{&quot;DocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Services&quot;,&quot;SignatureFields&quot;:[],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[&quot;Yes&quot;,&quot;X&quot;,&quot;V&quot;,&quot;✓&quot;,&quot;✔&quot;],&quot;BooleanSynonymsForNo&quot;:[&quot;No&quot;]}]}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;GlassIndustry.Invoice.Services&quot;,&quot;FormId&quot;:&quot;4163b046&quot;,&quot;FormName&quot;:&quot;temp&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,4250.0,5500.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Tiefland&quot;,&quot;Box&quot;:[334.3637,612.2041,578.1927,123.2612]},{&quot;Text&quot;:&quot;Glass&quot;,&quot;Box&quot;:[334.3637,1255.58521,410.9704,123.2612]},{&quot;Text&quot;:&quot;AG&quot;,&quot;Box&quot;:[334.3637,1720.40686,230.9936,123.2612]},{&quot;Text&quot;:&quot;INVOICE&quot;,&quot;Box&quot;:[354.1989,3099.2832,775.1745,143.0963]},{&quot;Text&quot;:&quot;Basedow&quot;,&quot;Box&quot;:[563.8846,542.7643,263.5878,52.4214]},{&quot;Text&quot;:&quot;Street&quot;,&quot;Box&quot;:[563.8846,830.4435,185.645,52.4214]},{&quot;Text&quot;:&quot;DE,&quot;,&quot;Box&quot;:[658.8099,675.9753,92.114,62.339]},{&quot;Text&quot;:&quot;04277&quot;,&quot;Box&quot;:[658.8099,797.8493,179.9768,51.0046]},{&quot;Text&quot;:&quot;DATE&quot;,&quot;Box&quot;:[658.8099,3136.12866,154.4683,51.0046]},{&quot;Text&quot;:&quot;6/6/2016&quot;,&quot;Box&quot;:[658.8099,3500.3335,287.6791,51.0046]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Services.Invoice#&quot;,&quot;Box&quot;:[750.4013,3523.475,266.0514,54.5746]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Services.DueDate&quot;,&quot;Box&quot;:[931.1798,3445.02417,436.5971,61.3965]},{&quot;Field&quot;:&quot;GlassIndustry.Invoice.Services.Total&quot;,&quot;Box&quot;:[3288.122,3516.65332,405.8989,85.2729]}],&quot;Tables&quot;:[]}]}]">
          <p4:FormExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentBounds>
          <p4:FormExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentObjectModel>
          <p4:FormExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentPath>
          <p4:FormExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentText>
          <p4:FormExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p6:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.ExtractorDocumentType>
          <p4:FormExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p6:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p4:FormExtractor.ExtractorResult>
        </p4:FormExtractor>
      </p4:DataExtractionScope.Extractors>
    </p4:DataExtractionScope>
    <p:CreateDocumentValidationAction ActionCatalog="{x:Null}" FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionOutput="[Action_1]" ActionPriority="Medium" ActionTitle="Form Extraction Validation" AutomaticExtractionResults="[RawExtractedResults]" BucketFolderPath="Default" BucketName="test_bucket" DisplayName="Create Document Validation Action" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" sap:VirtualizedContainerService.HintSize="512,365" sap2010:WorkflowViewState.IdRef="CreateDocumentValidationAction_1" Taxonomy="[taxonomy]" />
    <p:WaitForDocumentValidationActionAndResume ActionOutput="{x:Null}" AutomaticExtractionResults="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[Action_1]" DisplayName="Wait For Document Validation Action And Resume" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" sap:VirtualizedContainerService.HintSize="512,358" sap2010:WorkflowViewState.IdRef="WaitForDocumentValidationActionAndResume_1" RemoveDataFromStorage="True" Taxonomy="[taxonomy]" ValidatedExtractionResults="[HumanValidatedResults]">
      <p:WaitForDocumentValidationActionAndResume.DownloadFolderPath>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </p:WaitForDocumentValidationActionAndResume.DownloadFolderPath>
    </p:WaitForDocumentValidationActionAndResume>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="512,192" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p:PresentValidationStation AutomaticExtractionResults="[RawExtractedResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="Scanned Invoice.pdf" DocumentText="[digitizedText]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[taxonomy]" ValidatedExtractionResults="[HumanValidatedResults]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </p:PresentValidationStation>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <p4:ExportExtractionResults DataSet="[extractedDataset]" DisplayName="Export Extraction Results" ExtractionResult="[HumanValidatedResults]" sap:VirtualizedContainerService.HintSize="512,173" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" />
    <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="512,514" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[extractedDataset.Tables]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd1:DataTable">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,380" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="FormBasedextracted_tables.xlsx">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[item]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[item.TableName]" StartingCell="A1" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>