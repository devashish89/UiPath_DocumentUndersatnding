<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="866,2613" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="554,2408" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p5:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="digitizedText" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="p2:ExtractionResult" Name="RawExtractedResults" />
      <Variable x:TypeArguments="p2:ExtractionResult" Name="HumanValidatedResults" />
      <Variable x:TypeArguments="sd1:DataSet" Name="extractedDataset" />
      <Variable x:TypeArguments="x:String" Name="docPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="512,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
    <Assign sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[docPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Scanned Invoice.pdf"]</InArgument>
      </Assign.Value>
    </Assign>
    <p:DigitizeDocument DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="512,293" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
      <p:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" />
        </ActivityFunc>
      </p:DigitizeDocument.OCREngine>
    </p:DigitizeDocument>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="digitizedText.txt" sap:VirtualizedContainerService.HintSize="512,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[digitizedText]" />
    <p1:DataExtractionScope ClassificationResult="{x:Null}" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[digitizedText]" DocumentTypeId="GlassIndustry.Invoice.Services" ExtractionResult="[RawExtractedResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="512,396" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI6eb7e912ae1f407eab51041081027b34&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GlassIndustry.Invoice.Services&quot;:{&quot;FieldMappings&quot;:{&quot;GlassIndustry.Invoice.Services.Invoice#&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.Invoice#&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Services.DueDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.DueDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GlassIndustry.Invoice.Services.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GlassIndustry.Invoice.Services.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI6eb7e912ae1f407eab51041081027b34&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI6eb7e912ae1f407eab51041081027b34&quot;:[]}}">
      <p1:DataExtractionScope.Extractors>
        <p1:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Services&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Services.Invoice#&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Invoice\\s#\\s)[\\d]{6})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=Invoice\\\\s#\\\\s)[\\\\d]{6}\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;},{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Services.DueDate&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=DUE\\sDATE\\s)[\\d]{1,2}/[\\d]{1,2}/[\\d]{4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=DUE\\\\sDATE\\\\s)[\\\\d]{1,2}\\/[\\\\d]{1,2}\\/[\\\\d]{4}\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;},{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;GlassIndustry.Invoice.Services.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL\\s)?[\\d]{1,},[\\d]{1,}.[\\d]{1,}[\\n]{2}(?&lt;!Make))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:true,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?&lt;=TOTAL\\\\s)?[\\\\d]{1,},[\\\\d]{1,}.[\\\\d]{1,}[\\\\n]{2}(?&lt;!Make)\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,75" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UI6eb7e912ae1f407eab51041081027b34" Timeout="2000" UseVisualAlignment="False">
          <p1:RegexBasedExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p2:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p2:ResultsDocumentBounds" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                <DelegateInArgument x:TypeArguments="p2:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:RegexBasedExtractor.DocumentBounds>
          <p1:RegexBasedExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_4">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:RegexBasedExtractor.DocumentObjectModel>
          <p1:RegexBasedExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_5">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:RegexBasedExtractor.DocumentPath>
          <p1:RegexBasedExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_3">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:RegexBasedExtractor.DocumentText>
          <p1:RegexBasedExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p4:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p4:ExtractorDocumentType" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                <DelegateInArgument x:TypeArguments="p4:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:RegexBasedExtractor.ExtractorDocumentType>
          <p1:RegexBasedExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p4:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p4:ExtractorResult" sap2010:WorkflowViewState.IdRef="DelegateArgumentReference`1_1">
                <DelegateOutArgument x:TypeArguments="p4:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p1:RegexBasedExtractor.ExtractorResult>
        </p1:RegexBasedExtractor>
      </p1:DataExtractionScope.Extractors>
    </p1:DataExtractionScope>
    <p:PresentValidationStation AutomaticExtractionResults="[RawExtractedResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="Scanned Invoice.pdf" DocumentText="[digitizedText]" sap:VirtualizedContainerService.HintSize="512,365" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[taxonomy]" ValidatedExtractionResults="[HumanValidatedResults]" />
    <p1:ExportExtractionResults DataSet="[extractedDataset]" DisplayName="Export Extraction Results" ExtractionResult="[HumanValidatedResults]" sap:VirtualizedContainerService.HintSize="512,173" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" />
    <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="512,514" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[extractedDataset.Tables]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd1:DataTable">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,380" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="RegExBasedextracted_tables.xlsx">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[item]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[item.TableName]" StartingCell="A1" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>